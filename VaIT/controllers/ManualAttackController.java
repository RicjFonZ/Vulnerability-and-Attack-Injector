package controllers;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import utilities.HandleFiles;

import java.net.URL;
import java.util.ResourceBundle;

public class ManualAttackController implements Initializable {

    @FXML private TextArea responseTextArea;
    @FXML private TextArea htmlTextArea;
    @FXML private Button exportResponseBt;
    @FXML private Button exportHtmlBt;
    @FXML private Button clearResponseBt;
    @FXML private Button clearHtmlBt;
    @FXML private Button previewHtmlBt;

    private final HandleFiles handleFiles = new HandleFiles();

    private final int EMPTY_TEXTAREA_LENGTH = 0;

    @Override
    public void initialize(final URL location, final ResourceBundle resources) {

        // Listener for all changes on response and Http text area to control visibility of buttons
        addListenerTextAreas();

        //Export Response
        exportResponse();

        // Export Html
        exportHtml();

        // Clear TextAreas related to response and Http
        clearTextAreaButtons();

    }

    private void exportResponse() {

        exportResponseBt.setOnAction(event -> handleFiles.saveFile(
                "Text File",
                "*.txt",
                responseTextArea,
                "",
                "AttackResponse"
        ));
    }

    private void exportHtml() {

        exportHtmlBt.setOnAction(event -> handleFiles.saveFile(
                "HTML File",
                "*.html",
                htmlTextArea,
                "",
                "AttackHTML"));
    }

    private void addListenerTextAreas() {
        responseTextArea.textProperty().addListener((observable, oldValue, newValue) -> {
            if (newValue.length() != EMPTY_TEXTAREA_LENGTH){
                changeStateResponseButtons(false);
            }else {
                changeStateResponseButtons(true);
            }
        });

        htmlTextArea.textProperty().addListener((observable, oldValue, newValue) -> {
            if (newValue.length() != EMPTY_TEXTAREA_LENGTH){
                changeStateHttpButtons(false);
            }else {
                changeStateHttpButtons(true);
            }
        });
    }

    private void changeStateResponseButtons(final boolean state) {
        exportResponseBt.setDisable(state);
        clearResponseBt.setDisable(state);
    }

    private void changeStateHttpButtons(final boolean state) {
        exportHtmlBt.setDisable(state);
        clearHtmlBt.setDisable(state);
        previewHtmlBt.setDisable(state);
    }

    private void clearTextAreaButtons() {

        clearResponseBt.setOnAction(event -> responseTextArea.clear());
        clearHtmlBt.setOnAction(event -> htmlTextArea.clear());
    }
}
