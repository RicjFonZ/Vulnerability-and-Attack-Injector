package tools.controllers;

import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import utilities.filewatcher.FileWatcherController;
import utilities.HandleFiles;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;

import java.io.File;
import java.net.URL;
import java.util.ResourceBundle;
import java.util.logging.Logger;

public class RegexToolController implements Initializable {

    @FXML private CheckBox caseSensitiveCheckBox;
    @FXML private Button analysingButton;
    @FXML private Button openFileButton;
    @FXML private Button watchFileButton;
    //@FXML private Button ExportButton;
    @FXML private TextField regexTextField;
    @FXML private TextField fileLocationTextField;
    @FXML private Label statusLabel;

    private final HandleFiles handleFiles = new HandleFiles();
    Logger log = Logger.getLogger(RegexToolController.class.getName());


    @Override
    public void initialize(final URL location, final ResourceBundle resources) {


        //Set Text On Regex TextField
        regexTextField.setText("\\$?\\b.*\\b\\s*=\\s*intval\\s*(\\([^\\)\\(]*(\\([^\\)\\(]*\\))?\\)){1}\\s*;");

        //Set Initial Text On Status Label
        statusLabel.setText("Please open a PHP file to analyze.");

        //Open PHP File
        openFileButton.setOnAction(OpenFileButtonEvent -> {
            final File file = handleFiles.openFileDialog("PHP files (*.php)","*.php","Open PHP File");
            if (file != null) {

                //Set Localization of Open File
                fileLocationTextField.setText(file.getAbsolutePath());

                //Set Status with the name of open file
                statusLabel.setText("Current PHP file -> " + file.getName());

                //Activate Visual Elements
                caseSensitiveCheckBox.setDisable(false);
                analysingButton.setDisable(false);
                watchFileButton.setDisable(false);
            }
        });

        //Watch File
        watchFileButton.setOnAction(WatchFileButtonEvent -> {
            try {
                final FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/utilities/filewatcher/FileWatcherView.fxml"));
                final Parent encodeDecodeTool = fxmlLoader.load();
                final Stage stage = new Stage();
                stage.setTitle("Remove this bar");
                stage.setResizable(false);
                stage.setScene(new Scene(encodeDecodeTool));
                final FileWatcherController controller = new FileWatcherController();
                controller.initData("teste", "teste");
                stage.show();
            } catch (Exception e) {
                log.fine(e.getMessage());
            }
        });

    }
}
